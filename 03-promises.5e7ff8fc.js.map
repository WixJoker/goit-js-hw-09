{"mappings":"iMAMA,SAASA,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACT,GAAIH,EACF,IAAK,IAAII,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAC1BA,EAAIT,EACJG,GAAQ,SAAAO,G,OAAYC,QAAQC,IAAIF,WAGlCN,EAAO,YAERH,M,+SAlBPY,EAAA,SAE6BC,SAASC,cAAc,UAE/BC,iBAAiB,QAASjB,GAkB/CA,EAAc,EAAG,MACdkB,MAAK,SAAAC,G,IAAGR,EAAQQ,EAARR,SAAUT,EAAKiB,EAALjB,MACjBU,QAAQC,IAAI,uBAAwCO,OAAfT,EAAS,QAAYS,OAANlB,EAAM,UAE3DmB,OAAM,SAAAF,G,IAAGR,EAAQQ,EAARR,SAAUT,EAAKiB,EAALjB,MAClBU,QAAQC,IAAI,sBAAqCO,OAAfT,EAAS,QAAYS,OAANlB,EAAM,U","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst createPromisesButton = document.querySelector('button');\n\ncreatePromisesButton.addEventListener('click', createPromise);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        for (let i = 0; i < 3; i += 1) {\n          i = position;\n          resolve(position => console.log(position));\n        }\n      } else {\n        reject('error!');\n      }\n    }, delay);\n  });\n}\n\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n"],"names":["$ce04d3a99e08e73b$var$createPromise","position1","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","i","position","console","log","parcelRequire","document","querySelector","addEventListener","then","param","concat","catch"],"version":3,"file":"03-promises.5e7ff8fc.js.map"}