{"mappings":"YAAsBA,SAASC,cAAc,kBACxBD,SAASC,cAAc,iBAC1BD,SAASC,cAAc,mBAKzC,SAASC,EAAcC,EAAUC,G,kBAI3B,IAAIC,SAAQ,SAAAC,GACVJ,IACAK,YAAW,WACTD,EAAQE,KACPJ,OANT,GADsBK,KAAKC,SAAW,GAEpC,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAACC,EAAAD,GAPJX,SAASC,cAAc,UAE/BY,iBAAiB,QAASX,GAkB/CA,EAAc,EAAG,MACdY,MAAK,SAAAC,G,IAAGZ,EAAQY,EAARZ,SAAUC,EAAKW,EAALX,MACjBY,QAAQC,IAAI,uBAAwCC,OAAff,EAAS,QAAYe,OAANd,EAAM,UAE3De,OAAM,SAAAJ,G,IAAGZ,EAAQY,EAARZ,SAAUC,EAAKW,EAALX,MAClBY,QAAQC,IAAI,sBAAqCC,OAAff,EAAS,QAAYe,OAANd,EAAM,U","sources":["src/js/03-promises.js"],"sourcesContent":["const firstDelayRef = document.querySelector('[name=\"delay\"]');\nconst delayStepRef = document.querySelector('[name=\"step\"]');\nconst amountRef = document.querySelector('[name=\"amount\"]');\nconst createPromisesButton = document.querySelector('button');\n\ncreatePromisesButton.addEventListener('click', createPromise);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    for (let i = 0; i < 3; i += 1) {\n      new Promise(resolve => {\n        createPromise();\n        setTimeout(() => {\n          resolve(i);\n        }, delay);\n      });\n      //   .then(value => console.log(value));\n      // delay += step;\n    }\n  }\n}\n\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n"],"names":["document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","setTimeout","i","Math","random","i1","_loop","addEventListener","then","param","console","log","concat","catch"],"version":3,"file":"03-promises.a203458a.js.map"}