{"mappings":"oeAAAA,EAAA,SAMA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACT,GAAIH,EACF,IAAK,IAAII,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAC1BA,EAAIT,EACJG,GAAQO,GAAYC,QAAQC,IAAIF,UAGlCN,EAAO,YAERH,MAhBoBY,SAASC,cAAc,SAE/BC,iBAAiB,SAAUhB,GAkB9CA,EAAc,EAAG,MACdiB,MAAK,EAACN,SAAEA,EAAQT,MAAEA,MACjBU,QAAQC,IAAI,uBAAqBF,QAAiBT,UAEnDgB,OAAM,EAACP,SAAEA,EAAQT,MAAEA,MAClBU,QAAQC,IAAI,sBAAoBF,QAAeT","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst createPromisesForm = document.querySelector('.form');\n\ncreatePromisesForm.addEventListener('submit', createPromise);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        for (let i = 0; i < 3; i += 1) {\n          i = position;\n          resolve(position => console.log(position));\n        }\n      } else {\n        reject('error!');\n      }\n    }, delay);\n  });\n}\n\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n"],"names":["parcelRequire","$47d4ff9957288465$var$createPromise","position1","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","i","position","console","log","document","querySelector","addEventListener","then","catch"],"version":3,"file":"03-promises.c168c5d7.js.map"}