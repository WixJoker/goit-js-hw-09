{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAkCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,aAAY,WACNH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,YAEpBA,MA1CMQ,SAASC,cAAc,QAE/BC,iBAAiB,UAEtB,SAAgCC,GAC9BA,EAAMC,iBACN,IAAgCC,EAAAF,EAAMG,OAA9Bd,EAAwBa,EAAxBb,MAAOe,EAAiBF,EAAjBE,KAAMC,EAAWH,EAAXG,OAEfC,EAAYC,SAASlB,EAAMmB,OAC3BC,EAAWF,SAASH,EAAKI,QAMjC,SAAuBE,EAAOrB,EAAOe,GACnC,IAAK,IAAIO,EAAI,EAAGA,EAAID,EAAOC,GAAK,EAAG,CAEjCxB,EAAcwB,EADHtB,EAAQe,EAAOO,GAEvBC,MAAK,SAAAC,G,IAAGzB,EAAQyB,EAARzB,SAAU0B,EAAKD,EAALxB,MACjBJ,EAAA8B,OAAOC,QAAQ,uBAAwCC,OAAf7B,EAAS,QAAY6B,OAANH,EAAM,MAAK,CAC9DI,QAAO,SAGZC,OAAM,SAAAN,G,IAAGzB,EAAQyB,EAARzB,SAAU0B,EAAKD,EAALxB,MAClBJ,EAAA8B,OAAOK,QAAQ,sBAAqCH,OAAf7B,EAAS,QAAY6B,OAANH,EAAM,MAAK,CAC7DI,QAAS,UAdjBG,CAFqBd,SAASF,EAAOG,OAETF,EAAWG,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('form');\n\nform.addEventListener('submit', createPromisesOnSubmit);\n\nfunction createPromisesOnSubmit(event) {\n  event.preventDefault();\n  const { delay, step, amount } = event.target;\n\n  const delayTime = parseInt(delay.value);\n  const stepTime = parseInt(step.value);\n  const amountNumber = parseInt(amount.value);\n\n  countPromises(amountNumber, delayTime, stepTime);\n}\n\nfunction countPromises(count, delay, step) {\n  for (let i = 0; i < count; i += 1) {\n    let time = delay + step * i;\n    createPromise(i, time)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, {\n          timeout: 2000,\n        });\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {\n          timeout: 2000,\n        });\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setInterval(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setInterval","document","querySelector","addEventListener","event","preventDefault","_target","target","step","amount","delayTime","parseInt","value","stepTime","count","i","then","param","_$delay","Notify","success","concat","timeout","catch","failure","$ce04d3a99e08e73b$var$countPromises"],"version":3,"file":"03-promises.928a5ef6.js.map"}